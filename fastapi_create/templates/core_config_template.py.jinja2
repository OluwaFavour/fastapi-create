from passlib.context import CryptContext

from functools import lru_cache
from pydantic_settings import BaseSettings, SettingsConfigDict

# from app.core.logger import setup_logger


class Settings(BaseSettings):
    {% if cors_enabled %}# CORS settings
    cors_allow_credentials: bool = True
    cors_allowed_methods: list[str] = ["*"]
    cors_allowed_origins: list[str] = ["*"]{% endif %}

    # Database settings
    database_url: str = "sqlite:///./test.db"

    # Application settings
    debug: bool = True
    secret_key: str
    {% if smtp_enabled %}
    # SMTP settings
    smtp_host: str
    smtp_login: str
    smtp_password: str
    smtp_port: int{% endif %}

    model_config = SettingsConfigDict(env_file=".env")


@lru_cache
def get_settings():
    return Settings()


# Database logger instance
# db_logger = setup_logger("database_logger", "logs/database_actions.log")

password_context = CryptContext(schemes=["bcrypt"], deprecated="auto")